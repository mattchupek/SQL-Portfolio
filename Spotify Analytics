# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL ) ;

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#First I determined the avg popularity, danceability, and energy by artist and track. 
SELECT
artist_name
,track_name
,avg(popularity)
,avg(danceability)
,avg(energy)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;

#I determined which artists and tracks had a popularity of at least 90.
SELECT artist_name, track_name, popularity
FROM Spotifydata
WHERE popularity >=90
GROUP BY artist_name
ORDER BY popularity desc;

#I determined who the top 10 most popular artists were.
SELECT artist_name, avg(popularity)
FROM spotifydata
GROUP BY artist_name
ORDER BY popularity DESC LIMIT 10;

#Next I deteremined who had the longest song.
SELECT artist_name
FROM spotifydata
ORDER BY duration_ms DESC LIMIT 1;
--A: Farruko

#I deteremined the top 10 songs with highest average danceability.
SELECT track_name, avg(danceability)
FROM spotifydata
GROUP BY track_name
ORDER BY avg(danceability) DESC LIMIT 10;

#And finally the top 10 artists with highest average danceability.
SELECT artist_name, avg(danceability)
FROM spotifydata
GROUP BY artist_name
ORDER BY avg(danceability) DESC LIMIT 10;
